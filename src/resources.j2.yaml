---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard
  namespace: "{{ model_name }}"

---
kind: Service
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard
  namespace: "{{ model_name }}"
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/name: "{{ app_name }}"

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard-certs
  namespace: "{{ model_name }}"
type: Opaque

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard-csrf
  namespace: "{{ model_name }}"
type: Opaque
data:
  csrf: ""

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard-key-holder
  namespace: "{{ model_name }}"
type: Opaque

---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard-settings
  namespace: "{{ model_name }}"

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard
  namespace: "{{ model_name }}"
rules:
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
    verbs: ["get", "update", "delete"]
    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kubernetes-dashboard-settings"]
    verbs: ["get", "update"]
    # Allow Dashboard to get metrics.
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["heapster", "dashboard-metrics-scraper"]
    verbs: ["proxy"]
  - apiGroups: [""]
    resources: ["services/proxy"]
    resourceNames:
      ["heapster", "http:heapster:", "https:heapster:", "dashboard-metrics-scraper", "http:dashboard-metrics-scraper"]
    verbs: ["get"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard
rules:
  # Allow Metrics Scraper to get metrics from the Metrics server
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: "{{ app_name }}"
  name: kubernetes-dashboard
  namespace: "{{ model_name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: "{{ model_name }}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: "{{ model_name }}"

---
kind: Service
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: "{{ model_name }}"
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app.kubernetes.io/name: dashboard-metrics-scraper
